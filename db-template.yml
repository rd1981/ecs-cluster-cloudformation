AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a service on AWS Fargate, hosted in a private subnet, behind a private load balancer.
Parameters:
  DBClusterName:
    Type: String
    Description: Name for the RDS Cluster
    Default: general-cluster
  DatabaseName:
    Type: String
    Description: Name for the RDS Database
  DBMasterUserName:
    Type: String
    Default: root
    Description: Username of MySQL instance
  EnvType:
    Type: String
    Default: production
    Description: Environment
  NetworkingStackName:
    Type: String
    Description: The name of the parent networking stack that you created. Necessary
                 to locate and reference resources created by that stack.

Resources:
  DBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub "${EnvType}-Sonarqube-AuroraUserSecret"
      Description: RDS database auto-generated user password
      GenerateSecretString:
        SecretStringTemplate: !Sub '{"username": "${DBMasterUserName}"}'
        GenerateStringKey: "password"
        PasswordLength: 30
        ExcludeCharacters: '"@/\'
      Tags:
        - Key: AppName
          Value: sonarqube-ecs

  AuroraServerlessCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      DBClusterIdentifier: !Ref DBClusterName
      Engine: aurora
      EngineMode: serverless
      EngineVersion: '10.7'
      DatabaseName: !Ref DatabaseName
      MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref DBSecret, ':SecretString:username}}' ]]
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref DBSecret, ':SecretString:password}}' ]]
      DBClusterParameterGroupName: !Ref AuroraServerlessDBClusterParameterGroup
      DBSubnetGroupName: !Ref AuroraServerlessDBSubnetGroup
      ScalingConfiguration:
        AutoPause: false
        MaxCapacity: 4
        MinCapacity: 1
        SecondsUntilAutoPause: 3600
      VpcSecurityGroupIds: 
        - !Ref DbSecurityGroup
    DependsOn:
      - DBSecret
  AuroraServerlessDBClusterParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: AWS Event Driven Architecture Cluster Parameter Group
      Family: aurora-postgresql10
      Parameters:
        time_zone: 'Brazil/East'
        character_set_database: "utf32"
  AuroraServerlessDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: AWS Event Driven Architecture DB subnet group
      SubnetIds:
        - Fn::ImportValue: !Join [':', [!Ref 'NetworkingStackName', 'PrivateSubnetOne']]
        - Fn::ImportValue: !Join [':', [!Ref 'NetworkingStackName', 'PrivateSubnetTwo']]
  DbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RDS Security group
      SecurityGroupEgress: []
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: 
            Fn::ImportValue: !Join [':', [!Ref 'NetworkingStackName', 'BastionSecurityGroupId']]
        - IpProtocol: -1
          SourceSecurityGroupId: 
            Fn::ImportValue: !Join [':', [!Ref 'NetworkingStackName', 'FargateContainerSecurityGroupId']]
      VpcId: 
        Fn::ImportValue: !Join [':', [!Ref 'NetworkingStackName', 'VPCId']]
      Tags:
        - Key: Name
          Value: ecs-cluster-rds-sg
Outputs:
  DBSecret:
    Description: Secret for MySQL service
    Value: !Ref DBSecret
  RDSEndpointAddress:
    Description: Endpoint address of RDS Cluster
    Value: !GetAtt AuroraServerlessCluster.Endpoint.Address